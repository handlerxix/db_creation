/*
 * This file is generated by jOOQ.
 */
package generated.public_.tables;

import generated.public_.Keys;
import generated.public_.Public;
import generated.public_.tables.records.CreatedProductsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CreatedProducts extends TableImpl<CreatedProductsRecord> {

    /**
     * The reference instance of <code>public.created_products</code>
     */
    public static final CreatedProducts CREATED_PRODUCTS = new CreatedProducts();
    private static final long serialVersionUID = 1L;
    /**
     * The column <code>public.created_products.company_id</code>.
     */
    public final TableField<CreatedProductsRecord, Integer> COMPANY_ID = createField(DSL.name("company_id"), SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>public.created_products.product_id</code>.
     */
    public final TableField<CreatedProductsRecord, Integer> PRODUCT_ID = createField(DSL.name("product_id"), SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>public.created_products.count</code>.
     */
    public final TableField<CreatedProductsRecord, Integer> COUNT = createField(DSL.name("count"), SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>public.created_products.date</code>.
     */
    public final TableField<CreatedProductsRecord, OffsetDateTime> DATE = createField(DSL.name("date"), SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "");
    private transient Company _company;
    private transient Product _product;

    /**
     * Create an aliased <code>public.created_products</code> table reference
     */
    public CreatedProducts(String alias) {
        this(DSL.name(alias), CREATED_PRODUCTS);
    }

    /**
     * Create an aliased <code>public.created_products</code> table reference
     */
    public CreatedProducts(Name alias) {
        this(alias, CREATED_PRODUCTS);
    }

    /**
     * Create a <code>public.created_products</code> table reference
     */
    public CreatedProducts() {
        this(DSL.name("created_products"), null);
    }

    public <O extends Record> CreatedProducts(Table<O> child, ForeignKey<O, CreatedProductsRecord> key) {
        super(child, key, CREATED_PRODUCTS);
    }

    private CreatedProducts(Name alias, Table<CreatedProductsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreatedProducts(Name alias, Table<CreatedProductsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreatedProductsRecord> getRecordType() {
        return CreatedProductsRecord.class;
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<CreatedProductsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.CREATED_PRODUCTS__CREATED_PRODUCTS_COMPANY_ID_FKEY, Keys.CREATED_PRODUCTS__CREATED_PRODUCTS_PRODUCT_ID_FKEY);
    }

    public Company company() {
        if (_company == null)
            _company = new Company(this, Keys.CREATED_PRODUCTS__CREATED_PRODUCTS_COMPANY_ID_FKEY);

        return _company;
    }

    public Product product() {
        if (_product == null)
            _product = new Product(this, Keys.CREATED_PRODUCTS__CREATED_PRODUCTS_PRODUCT_ID_FKEY);

        return _product;
    }

    @Override
    public CreatedProducts as(String alias) {
        return new CreatedProducts(DSL.name(alias), this);
    }

    @Override
    public CreatedProducts as(Name alias) {
        return new CreatedProducts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CreatedProducts rename(String name) {
        return new CreatedProducts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CreatedProducts rename(Name name) {
        return new CreatedProducts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
